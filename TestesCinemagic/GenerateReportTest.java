// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.JavascriptExecutor;
import java.util.*;
public class GenerateReportTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void generateReport() {
    driver.get("http://localhost:3000/sales");
    driver.findElement(By.cssSelector(".wrap-input:nth-child(2) > .input-register-form")).click();
    {
      sleep();
      WebElement dropdown = driver.findElement(By.cssSelector(".input-register-form"));
      dropdown.findElement(By.xpath("//option[. = 'Fevereiro']")).click();
    }
    driver.findElement(By.cssSelector(".wrap-input:nth-child(3) > .input-register-form")).click();
    driver.findElement(By.cssSelector(".wrap-input:nth-child(3) > .input-register-form")).sendKeys("2023");
    driver.findElement(By.cssSelector(".register-form-btn")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".register-form-btn"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    sleep();
    assertEquals("Despesas do mês: R$ 200,50", driver.findElement(By.cssSelector("p:nth-child(10)")).getText());
    String resultado = driver.findElement(By.cssSelector("p:nth-child(10)")).getText();
    String resuEsperado = "Despesas do mês: R$ 200,50";
    System.out.println("O resultado foi: " + resultado + "\n" + "O resultado esperado era: " + resuEsperado);
  }
  public void sleep() {
    try {
      Thread.sleep(2000); // espera por 3 segundos
    } catch (InterruptedException e) {
      // tratar a exceção, se necessário
    }
  }
}
